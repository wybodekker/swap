#!/usr/bin/env ruby
# encoding: utf-8
Version='1.03'
Myname = File.basename($0)
require 'optparse'
require 'colorize'

Help =
<<'DOC'
= swap - safely swap two files or directories

= Synopsis
swap [options] file_or_dir1 file_or_dir2	

-c,--copy	Use if swapping directories in different file systems
-d,--dryrun	Show what would be done
-h		print this help and exit
-H, --help	show full documentation via less and exit
-V,--version	print version and exit

= Description
swap swaps the names of two files or two directories. It makes sure that those
both exist, are writable, are both either directories or regular files, and are
not the same file. If the two are on different devices, swap makes sure that
the |--copy| option was used. Ownerships and permissions of the files must
be the same.

= Author
[Wybo Dekker](wybo@dekkerdocumenten.nl)

= Copyright
Released under the [GNU General Public License](www.gnu.org/copyleft/gpl.html)
DOC

def help
  system("echo \"#{Help}\" | less -P#{Myname}-#{Version.tr('.','·')}")
end

def die(m)
   STDERR.puts "#{Myname}: #{m}".red
   exit 1                                                                            
end

def handle_options
   ARGV.options do |opts|
      opts.banner =  "#{Myname} - swap to files or directories\n"
      opts.banner << "Usage: #{Myname} [options] file_or_dir1 file_or_dir2"
      opts.separator ""
      opts.summary_width=15 # 2x8-1                                                  
      opts.summary_indent=''
   
      opts.on('-c','--copy','Use if swapping directories in different file systems') do
         $copy = true
      end
   
      opts.on('-d','--dryrun','Show what would be done') do
         $dryrun = true
      end
   
      opts.on('-h','print this help and exit') do
         puts opts.to_a.delete_if { |x| x =~ /—$/ }
         exit
      end
   
      opts.on('-H','--help','show full documentation via less and exit') do
         help
         exit
      end
   
      opts.on('-V','--version','print version and exit') do
         puts opts.version
         exit
      end
   
      opts.on('-I','—') do
         system("instscript #{Myname}") or
            die 'the -I option is for developers only'
         exit
      end
   
      opts.parse!
   end or exit 1
end

# defaults
$dryrun = $copy = false

handle_options

ARGV.size == 2 or die("#{Myname}: need two file or directory names")

f1, f2 = ARGV.map do |s|
   f = s.sub(/\/+$/,'')  # remove trailing /
   test(?e,f) or die("file #{f} does not exist")
   test(?w,f) or die("file #{f} is not writable")
   f
end
f1 == f2 and die("#{f1} and #{f2} are the same file")

s1, s2 = File.lstat(f1), File.lstat(f2)

s1.ino == s2.ino &&
   die("#{f1} and #{f2} are the same file")

s1.mode == s2.mode or 
   die("you can not swap files (#{f1}, #{f2}) that have different permissions")
s1.gid == s2.gid or
   die("you can not swap files (#{f1}, #{f2}) that have different group id's")
s1.uid == s2.uid or
   die("you can not swap files (#{f1}, #{f2}) that have different user id's")

(s1.mode >>9) == 64 || (s2.mode >>9) == 32 or
   die("only directories and straight files can be swapped")

command = ((s1.mode >>9) == 32 && s1.dev != s2.dev) ? 'cp -a' : 'mv'
if command == 'cp -a' && !$copy 
   die("you can not swap directories between different\n" + 
       "filesystems except by using the -c / --copy option")
end

# touch in case these files are involved in make operations:
syscom = [
   %Q{mv '#{f1}' '#{f1}.#{$$}'},
   %Q{#{command} '#{f2}' '#{f1}'},
   %Q{rm -rf '#{f2}'},
   %Q{#{command} '#{f1}.#{$$}' '#{f2}'},
   %Q{rm -rf '#{f1}.#{$$}'},
   %Q{touch '#{f1}' '#{f2}'}
]
unless $copy
   syscom.delete_at(4)
   syscom.delete_at(2)
end
syscom = syscom.join("\n")

if $dryrun
   puts "This would happen:",syscom
else 
   system(syscom)
end
